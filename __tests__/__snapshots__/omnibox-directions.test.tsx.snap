// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OmniboxDirections component should match snapshot 1`] = `
Array [
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "backgroundColor": "#F2F2F2",
          "height": 235,
          "position": "absolute",
          "top": 0,
          "width": 750,
          "zIndex": 1,
        },
        Object {
          "height": 260,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "marginLeft": 15,
          "marginRight": 15,
          "paddingBottom": 20,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="backArrow"
      >
        <Text />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginLeft": 36,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "height": 80,
              "resizeMode": "contain",
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            rejectResponderTermination={true}
            selectTextOnFocus={true}
            style={
              Object {
                "borderColor": "#DEDEDE",
                "borderWidth": 1,
                "fontSize": 16,
                "height": 38,
                "marginBottom": 15,
                "marginLeft": 10,
                "paddingLeft": 10,
              }
            }
            testID="searchInputInitialLocation"
            underlineColorAndroid="transparent"
            value={null}
          />
          <TextInput
            allowFontScaling={true}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            rejectResponderTermination={true}
            selectTextOnFocus={true}
            style={
              Object {
                "borderColor": "#DEDEDE",
                "borderWidth": 1,
                "fontSize": 16,
                "height": 38,
                "marginBottom": 15,
                "marginLeft": 10,
                "paddingLeft": 10,
              }
            }
            testID="searchInputDestinationLocation"
            underlineColorAndroid="transparent"
            value="H805"
          />
        </View>
      </View>
      <View
        style={
          Object {
            "marginTop": 0,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#DEDEDE",
              "borderWidth": 2,
              "flexDirection": "row",
              "height": 40,
              "justifyContent": "space-between",
              "marginLeft": 36,
              "opacity": 1,
              "paddingLeft": 15,
              "paddingRight": 15,
            }
          }
          testID="timePickerButton"
        >
          <Text
            style={
              Object {
                "color": "#717171",
              }
            }
          >
            DEPART NOW
          </Text>
          <Text />
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginTop": 20,
          }
        }
      >
        <View
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text />
        </View>
        <View
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text />
        </View>
        <View
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text />
        </View>
        <View
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text />
        </View>
        <View
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Image
            source={1}
            style={
              Object {
                "height": 26,
                "resizeMode": "contain",
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTSafeAreaView>,
  <View
    style={
      Object {
        "alignSelf": "center",
        "bottom": 40,
        "flex": 1,
        "height": 60,
        "position": "absolute",
        "right": 20,
        "width": 60,
        "zIndex": 1,
      }
    }
  >
    <RNGestureHandlerButton
      collapsable={false}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
        style={
          Object {
            "height": 60,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#AA2B45",
              "borderColor": "rgba(0,0,0,0.2)",
              "borderRadius": 50,
              "borderWidth": 1,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "top": 0,
              "width": 60,
            }
          }
        >
          <Text />
        </View>
      </View>
    </RNGestureHandlerButton>
  </View>,
]
`;
