// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OmniboxDirections component should match snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#F2F2F2",
        "height": 235,
        "position": "absolute",
        "top": 0,
        "width": 750,
        "zIndex": 1,
      },
      undefined,
      Object {
        "height": 260,
      },
    ]
  }
>
  <View
    style={
      Object {
        "marginLeft": 15,
        "marginRight": 15,
        "paddingBottom": 20,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="backArrow"
    >
      <Text />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginLeft": 36,
        }
      }
    >
      <Image
        source={1}
      />
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          rejectResponderTermination={true}
          selectTextOnFocus={true}
          style={
            Object {
              "borderColor": "#DEDEDE",
              "borderWidth": 1,
              "fontSize": 16,
              "height": 38,
              "marginBottom": 15,
              "marginLeft": 10,
              "paddingLeft": 10,
            }
          }
          testID="searchInputInitialLocation"
          underlineColorAndroid="transparent"
          value="Stairs 2"
        />
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          rejectResponderTermination={true}
          selectTextOnFocus={true}
          style={
            Object {
              "borderColor": "#DEDEDE",
              "borderWidth": 1,
              "fontSize": 16,
              "height": 38,
              "marginBottom": 15,
              "marginLeft": 10,
              "paddingLeft": 10,
            }
          }
          testID="searchInputDestinationLocation"
          underlineColorAndroid="transparent"
          value="Stairs 3"
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "#DEDEDE",
          "borderWidth": 1,
          "height": 35,
          "marginBottom": 20,
          "marginLeft": 38,
        }
      }
    >
      <Text
        adjustFontSizeToFit={true}
        allowFontScaling={false}
        numberOfLines={1}
        style={
          Object {
            "alignSelf": "center",
            "fontSize": 13,
          }
        }
      >
        Departure time 9AM
      </Text>
      <Modal
        animationType="slide"
        hardwareAccelerated={false}
        onOrientationChange={[Function]}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "flex-end",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#F5FCFF",
                  "justifyContent": "center",
                  "padding": 0,
                },
                Object {
                  "width": 750,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#CCCFD6",
                    "borderBottomWidth": 0,
                    "borderColor": "#CCCFD6",
                    "borderTopColor": "lightgrey",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "padding": 0,
                  },
                  undefined,
                  Object {
                    "width": 750,
                  },
                ]
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#006BFF",
                        "padding": 8,
                      },
                      undefined,
                      Object {
                        "textAlign": "left",
                      },
                    ]
                  }
                >
                  Cancel
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#006BFF",
                        "padding": 8,
                      },
                      undefined,
                      Object {
                        "textAlign": "right",
                      },
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                    },
                    undefined,
                    Object {
                      "width": 750,
                    },
                  ]
                }
              >
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "Departure time 9AM",
                        "textColor": undefined,
                        "value": 0,
                      },
                      Object {
                        "label": "bithc",
                        "textColor": undefined,
                        "value": 1,
                      },
                      Object {
                        "label": "please",
                        "textColor": undefined,
                        "value": 2,
                      },
                      Object {
                        "label": "dlsfjhlds",
                        "textColor": undefined,
                        "value": 3,
                      },
                      Object {
                        "label": "bisaljdfhlathc",
                        "textColor": undefined,
                        "value": 4,
                      },
                      Object {
                        "label": "bijsdfa lsdkfthc",
                        "textColor": undefined,
                        "value": 5,
                      },
                      Object {
                        "label": "biasjdk fdsthc",
                        "textColor": undefined,
                        "value": 6,
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <Text />
      <Text />
      <Text />
      <Text />
      <Image
        source={1}
        style={
          Object {
            "marginLeft": 15,
          }
        }
      />
    </View>
  </View>
</View>
`;
